@model ProjectBase.Web.Models.ContextModel
@{
    ViewBag.Title = "Edit";
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<script>
    function CompanyAutocomplete(inputId, hiddenInputId) {
        this.init = function () {
            getInput().autocomplete({
                source: "/Autocomplete/CompaniesAutocomplete/",
                minLength: 0,
                select: function (event, ui) {
                    getHidden().val(ui.item.id);
                }
            });
        };

        function getInput() { return $("#" + inputId); }
        function getHidden() { return $("#" + hiddenInputId); }
    }

    function ChiefsAutocomplete(inputId, hiddenInputId) {
        this.init = function () {
            getInput().autocomplete({
                source: "/Autocomplete/ChiefsAutocomplete/",
                minLength: 0,
                select: function (event, ui) {
                    getHidden().val(ui.item.id);
                }
            });
        };

        function getInput() { return $("#" + inputId); }
        function getHidden() { return $("#" + hiddenInputId); }
    }

    function ParticipantAutocomplete(inputId, hiddenInputId) {
        this.init = function () {
            getInput().autocomplete({
                source: "/Autocomplete/ParticipantsAutocomplete/",
                minLength: 0,
                select: function (event, ui) {
                    getHidden().val(ui.item.id);
                }
            });
        };

        function getInput() { return $("#" + inputId); }
        function getHidden() { return $("#" + '@Model.Project.Id'); }
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProjectModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Project.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.CompanyCustomer.Id, "Компания-заказчик", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("company-customer-autocomplete", "", new { type = "search", placeholder = "Выберите компанию" })
                @Html.Hidden("CompanyCustomerId", Model.Project.CompanyCustomer.Id)
            </div>
        </div>
        <script>
            var _companyCustomerWidget = new CompanyAutocomplete("company-customer-autocomplete", "CompanyCustomerId");
            _companyCustomerWidget.init();
        </script>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.CompanyPerformer.Id, "Компания-исполнитель", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("company-performer-autocomplete", "", new { type = "search", placeholder = "Выберите компанию" })
                @Html.Hidden("CompanyPerformerId", Model.Project.CompanyPerformer.Id)
            </div>
        </div>
        <script>
            var _companyPerformerWidget = new CompanyAutocomplete("company-performer-autocomplete", "CompanyPerformerId");
            _companyPerformerWidget.init();
        </script>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.ProjectChief.Id, "Руководитель", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("project-chief-autocomplete", "", new { type = "search", placeholder = "Выберите сотрудника" })
                @Html.Hidden("ProjectChiefId", Model.Project.ProjectChief.Id)
            </div>
        </div>
        <script>
            var _chiefWidget = new ChiefsAutocomplete("project-chief-autocomplete", "ProjectChiefId");
            _chiefWidget.init();
        </script>

        <div class="form-group">
            @Html.Label("Участники", new { @class = "control-label col-md-2" })

            <dd id="participants">

            </dd>

            <div class="col-md-10">
                @Html.TextBox("participant-autocomplete", "", new { type = "search", placeholder = "Выберите сотрудника" })
                @Html.Hidden("PartId")
                <input id="addParticipant" type="button" value="добавить" class="btn btn-default" />
            </div>


        </div>
        <script>
            var _partWidget = new ParticipantAutocomplete("participant-autocomplete", "PartId");
            _partWidget.init();

            $("#addParticipant").click(function () {
                $.ajax({
                    type: "POST",
                    url: "/Project/AddParticipant",
                    data: {
                        employeeId: $("#PartId").val(),
                        projectId: '@Model.Project.Id'
                    },
                    success: function (response) {
                        console.log(response);
                        GetParticipants();
                        //AjaxResponse(response);
                    }
                });
            });


        </script>



        <div class="form-group">
            @Html.LabelFor(model => model.Project.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.CloseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.CloseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.CloseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.Priority, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.Priority, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script>
    
    function GetParticipants() {
        $.ajax({
            type: "POST",
            url: '/Project/GetParticipants',
            data: { projectId: '@Model.Project.Id' },
            success: function (response) {
                console.log(response);
                AjaxResponse(response);
            }
        });
    }

    function DeleteParticipant (id) {
        alert("delete click");
        alert(id)
        $.ajax({
            type: "POST",
            url: "/Project/DeleteParticipant",
            data: {
                employeeId: id,
                projectId: '@Model.Project.Id'
            },
            success: function (response) {
                console.log(response);
                GetParticipants();
                //AjaxResponse(response);
            }
        });
    };

    function AjaxResponse(response) {
        if (response!=0) {
            for (var i = 0; i < response.length; i++) {
                $("#participants").append("<li>" + response[i].name + " <a href='#' onclick=DeleteParticipant('"  + response[i].id +  "')>удалить</li>")
            }
        }
    }



    $(document).ready(function () {
        GetParticipants();
    });

</script>